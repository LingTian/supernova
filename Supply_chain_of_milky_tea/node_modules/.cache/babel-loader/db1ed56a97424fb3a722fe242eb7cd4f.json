{"remainingRequest":"/home/hong/code/Supply_chain_of_milky_tea/node_modules/babel-loader/lib/index.js!/home/hong/code/Supply_chain_of_milky_tea/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/hong/code/Supply_chain_of_milky_tea/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/hong/code/Supply_chain_of_milky_tea/src/components/Farmer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/hong/code/Supply_chain_of_milky_tea/src/components/Farmer.vue","mtime":1564828008616},{"path":"/home/hong/code/Supply_chain_of_milky_tea/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hong/code/Supply_chain_of_milky_tea/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/hong/code/Supply_chain_of_milky_tea/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hong/code/Supply_chain_of_milky_tea/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/hong/code/Supply_chain_of_milky_tea/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _require = require(\"u3.js\"),\n    createU3 = _require.createU3,\n    U3Utils = _require.U3Utils;\n\nvar config = require(\"../../config\");\n\nexport default {\n  methods: {\n    data: function data() {\n      return {\n        upc: 0,\n        sku: 0,\n        productType: '',\n        productInfo: '',\n        price: 0\n      };\n    },\n    harvest: function () {\n      var _harvest = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var u3, contract, action, params, result, tx, farmerstable, farmerscope, farmers;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log(\"harvest\"); // TODO: 读取upc的值\n                // TODO: 发起harvest的交易\n\n                /*\n                config.keyProvider = \"5J9bWm2ThenDm3tjvmUgHtWCVMUdjRR1pxnRtnJjvKA4b2ut5WK\"; // alice\n                let creator = \"ben\";\n                const u3 = createU3(config);\n                let contract = await u3.contract(creator);\n                await contract.harvest(this.upc, this.sku, this.productType, this.productInfo, Date.now(), {authorization: [`alice@active`]})\n                */\n\n                u3 = createU3(config);\n                contract = 'dremofly1';\n                action = 'harvest';\n                params = [this.upc, this.sku, this.productType, this.productInfo, Date.now()];\n                _context.next = 7;\n                return window.Cona.getCurrentNetworkChains();\n\n              case 7:\n                result = _context.sent;\n\n                if (!result.success) {\n                  _context.next = 15;\n                  break;\n                }\n\n                _context.next = 11;\n                return window.Cona.callContract({\n                  contract: contract,\n                  action: action,\n                  params: params,\n                  chainId: result.data[1]._id\n                });\n\n              case 11:\n                tx = _context.sent;\n                console.log(tx);\n                _context.next = 16;\n                break;\n\n              case 15:\n                console.log(reuslt.msg);\n\n              case 16:\n                // 查询状态\n                farmerstable = \"state\";\n                farmerscope = \"s.state\";\n                _context.next = 20;\n                return u3.getTableRecords({\n                  \"json\": true,\n                  \"code\": contract,\n                  \"scope\": farmerscope,\n                  \"table\": farmerstable\n                });\n\n              case 20:\n                farmers = _context.sent;\n                console.log(farmers.rows);\n\n              case 22:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function harvest() {\n        return _harvest.apply(this, arguments);\n      }\n\n      return harvest;\n    }(),\n    process: function () {\n      var _process = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var u3, contract, action, params, result, tx, farmerstable, farmerscope, farmers;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                console.log(\"process\"); // TODO: 读取upc的值\n                // TODO: 发起harvest的交易\n\n                /*\n                config.keyProvider = \"5J9bWm2ThenDm3tjvmUgHtWCVMUdjRR1pxnRtnJjvKA4b2ut5WK\"; // alice\n                let creator = \"ben\";\n                const u3 = createU3(config);\n                let contract = await u3.contract(creator);\n                await contract.process(this.upc, {authorization: [`alice@active`]})\n                */\n\n                u3 = createU3(config);\n                contract = 'dremofly1';\n                action = 'process';\n                params = [this.upc];\n                _context2.next = 7;\n                return window.Cona.getCurrentNetworkChains();\n\n              case 7:\n                result = _context2.sent;\n\n                if (!result.success) {\n                  _context2.next = 15;\n                  break;\n                }\n\n                _context2.next = 11;\n                return window.Cona.callContract({\n                  contract: contract,\n                  action: action,\n                  params: params,\n                  chainId: result.data[1]._id\n                });\n\n              case 11:\n                tx = _context2.sent;\n                console.log(tx);\n                _context2.next = 16;\n                break;\n\n              case 15:\n                console.log(reuslt.msg);\n\n              case 16:\n                // 查询状态\n                // TODO: 改成正确的命名，上同\n                farmerstable = \"state\";\n                farmerscope = \"s.state\";\n                _context2.next = 20;\n                return u3.getTableRecords({\n                  \"json\": true,\n                  \"code\": contract,\n                  \"scope\": farmerscope,\n                  \"table\": farmerstable\n                });\n\n              case 20:\n                farmers = _context2.sent;\n                console.log(farmers.rows);\n\n              case 22:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function process() {\n        return _process.apply(this, arguments);\n      }\n\n      return process;\n    }(),\n    pack: function () {\n      var _pack = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3() {\n        var u3, contract, action, params, result, tx, farmerstable, farmerscope, farmers;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                console.log(\"Pakc\");\n                /*\n                config.keyProvider = \"5J9bWm2ThenDm3tjvmUgHtWCVMUdjRR1pxnRtnJjvKA4b2ut5WK\"; // alice\n                let creator = \"ben\";\n                const u3 = createU3(config);\n                let contract = await u3.contract(creator);\n                await contract.pack(this.upc, {authorization: [`alice@active`]})\n                */\n\n                u3 = createU3(config);\n                contract = 'dremofly1';\n                action = 'pack';\n                params = [this.upc];\n                _context3.next = 7;\n                return window.Cona.getCurrentNetworkChains();\n\n              case 7:\n                result = _context3.sent;\n\n                if (!result.success) {\n                  _context3.next = 15;\n                  break;\n                }\n\n                _context3.next = 11;\n                return window.Cona.callContract({\n                  contract: contract,\n                  action: action,\n                  params: params,\n                  chainId: result.data[1]._id\n                });\n\n              case 11:\n                tx = _context3.sent;\n                console.log(tx);\n                _context3.next = 16;\n                break;\n\n              case 15:\n                console.log(reuslt.msg);\n\n              case 16:\n                // 查询状态\n                farmerstable = \"state\";\n                farmerscope = \"s.state\";\n                _context3.next = 20;\n                return u3.getTableRecords({\n                  \"json\": true,\n                  \"code\": contract,\n                  \"scope\": farmerscope,\n                  \"table\": farmerstable\n                });\n\n              case 20:\n                farmers = _context3.sent;\n                console.log(farmers.rows);\n\n              case 22:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function pack() {\n        return _pack.apply(this, arguments);\n      }\n\n      return pack;\n    }(),\n    sell: function () {\n      var _sell = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4() {\n        var u3, contract, action, params, result, tx, farmerstable, farmerscope, farmers;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                console.log(\"sell\"); // TODO: 读取upc的值\n                // TODO: 发起harvest的交易\n\n                /*\n                config.keyProvider = \"5J9bWm2ThenDm3tjvmUgHtWCVMUdjRR1pxnRtnJjvKA4b2ut5WK\"; // alice\n                let creator = \"ben\";\n                const u3 = createU3(config);\n                let contract = await u3.contract(creator);\n                // TODO: 添加price\n                await contract.sell(this.upc, 1, {authorization: [`alice@active`]})\n                */\n\n                u3 = createU3(config);\n                contract = 'dremofly1';\n                action = 'sell';\n                params = [this.upc, this.price];\n                _context4.next = 7;\n                return window.Cona.getCurrentNetworkChains();\n\n              case 7:\n                result = _context4.sent;\n\n                if (!result.success) {\n                  _context4.next = 15;\n                  break;\n                }\n\n                _context4.next = 11;\n                return window.Cona.callContract({\n                  contract: contract,\n                  action: action,\n                  params: params,\n                  chainId: result.data[1]._id\n                });\n\n              case 11:\n                tx = _context4.sent;\n                console.log(tx);\n                _context4.next = 16;\n                break;\n\n              case 15:\n                console.log(reuslt.msg);\n\n              case 16:\n                // 查询状态\n                farmerstable = \"state\";\n                farmerscope = \"s.state\";\n                _context4.next = 20;\n                return u3.getTableRecords({\n                  \"json\": true,\n                  \"code\": contract,\n                  \"scope\": farmerscope,\n                  \"table\": farmerstable\n                });\n\n              case 20:\n                farmers = _context4.sent;\n                console.log(farmers.rows);\n\n              case 22:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function sell() {\n        return _sell.apply(this, arguments);\n      }\n\n      return sell;\n    }()\n  },\n  mounted: function () {\n    var _mounted = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee5() {\n      var rs, sign;\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              window.addEventListener('load', function () {\n                if (typeof window.Cona !== 'undefined') {\n                  console.log('Cona is enabled');\n                } else {\n                  console.log('Cona is not installed');\n                }\n              });\n              _context5.next = 3;\n              return window.Cona.connectRequest();\n\n            case 3:\n              rs = _context5.sent;\n              console.log(\"rs: \", rs);\n              _context5.next = 7;\n              return window.Cona.sign();\n\n            case 7:\n              sign = _context5.sent;\n              console.log(\"sign: \", sign);\n\n            case 9:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }()\n};",{"version":3,"sources":["Farmer.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <h1>Farmer</h1>\n    UPC\n    <input type=\"number\" id=\"upc\" name=\"upc\" v-model=\"upc\" number><br>\n    SKU\n    <input type=\"number\" id=\"sku\" name=\"sku\" v-model=\"sku\" number><br>\n    Product Type\n    <select v-model=\"productType\">\n      <option disabled value=\"\">请选择</option>\n      <option>tea</option>\n      <option>milk</option>\n      <option>cassava</option>\n    </select>\n    <br>\n    Product Information\n    <input id=\"productInfo\" name=\"productInfo\" v-model=\"productInfo\"><br> \n    Price\n    <input type=\"number\" id=\"price\" v-model.number=\"price\" number><br>\n    <br>\n    <el-button @click=\"harvest\" type=\"primary\">Harvest</el-button><br>\n    <br>\n    <el-button @click=\"process\" type=\"primary\">Process</el-button><br>\n    <br>\n    <el-button @click=\"pack\" type=\"primary\">Pack</el-button><br>\n    <br>\n    <el-button @click=\"sell\" type=\"primary\">Sell</el-button>\n  </div>\n</template>\n\n<script>\nconst { createU3, U3Utils } = require(\"u3.js\");\nconst config = require(\"../../config\");\nexport default {\n  methods: {\n    data() {\n      return {\n        upc: 0,\n        sku: 0,\n        productType: '',\n        productInfo: '',\n        price: 0\n      };\n    },\n\n    async harvest () {\n      console.log(\"harvest\")\n      // TODO: 读取upc的值\n      // TODO: 发起harvest的交易\n      /*\n      config.keyProvider = \"5J9bWm2ThenDm3tjvmUgHtWCVMUdjRR1pxnRtnJjvKA4b2ut5WK\"; // alice\n      let creator = \"ben\";\n      const u3 = createU3(config);\n      let contract = await u3.contract(creator);\n      await contract.harvest(this.upc, this.sku, this.productType, this.productInfo, Date.now(), {authorization: [`alice@active`]})\n      */\n      const u3 = createU3(config);\n      const contract = 'dremofly1'\n      const action = 'harvest'\n      const params = [this.upc, this.sku, this.productType, this.productInfo, Date.now()]\n      const result = await window.Cona.getCurrentNetworkChains()\n      if(result.success) {\n        const tx = await window.Cona.callContract({ contract, action, params, chainId: result.data[1]._id });\n        console.log(tx)\n      } else {\n        console.log(reuslt.msg)\n      }\n\n      // 查询状态\n      const farmerstable = \"state\";\n\t\t  const farmerscope = \"s.state\";\n\t\t  let farmers = await u3.getTableRecords({\n\t\t\t \"json\": true,\n\t\t\t \"code\": contract,\n\t\t\t \"scope\": farmerscope,\n\t\t\t \"table\": farmerstable\n\t\t });\n\t\t console.log(farmers.rows)\n    },\n\n    async process () {\n      console.log(\"process\")\n      // TODO: 读取upc的值\n      // TODO: 发起harvest的交易\n      /*\n      config.keyProvider = \"5J9bWm2ThenDm3tjvmUgHtWCVMUdjRR1pxnRtnJjvKA4b2ut5WK\"; // alice\n      let creator = \"ben\";\n      const u3 = createU3(config);\n      let contract = await u3.contract(creator);\n      await contract.process(this.upc, {authorization: [`alice@active`]})\n      */\n\n      const u3 = createU3(config);\n      const contract = 'dremofly1'\n      const action = 'process'\n      const params = [this.upc]\n      const result = await window.Cona.getCurrentNetworkChains()\n      if(result.success) {\n        const tx = await window.Cona.callContract({ contract, action, params, chainId: result.data[1]._id });\n        console.log(tx)\n      } else {\n        console.log(reuslt.msg)\n      } \n\n      // 查询状态\n      // TODO: 改成正确的命名，上同\n      const farmerstable = \"state\";\n\t\t const farmerscope = \"s.state\";\n\t\t let farmers = await u3.getTableRecords({\n\t\t\t \"json\": true,\n\t\t\t \"code\": contract,\n\t\t\t \"scope\": farmerscope,\n\t\t\t \"table\": farmerstable\n\t\t });\n\t\t console.log(farmers.rows)\n    },\n\n    async pack () {\n      console.log(\"Pakc\")\n      /*\n      config.keyProvider = \"5J9bWm2ThenDm3tjvmUgHtWCVMUdjRR1pxnRtnJjvKA4b2ut5WK\"; // alice\n      let creator = \"ben\";\n      const u3 = createU3(config);\n      let contract = await u3.contract(creator);\n      await contract.pack(this.upc, {authorization: [`alice@active`]})\n      */\n\n      const u3 = createU3(config);\n      const contract = 'dremofly1'\n      const action = 'pack'\n      const params = [this.upc]\n      const result = await window.Cona.getCurrentNetworkChains()\n      if(result.success) {\n        const tx = await window.Cona.callContract({ contract, action, params, chainId: result.data[1]._id });\n        console.log(tx)\n      } else {\n        console.log(reuslt.msg)\n      }\n      // 查询状态\n      const farmerstable = \"state\";\n\t\t  const farmerscope = \"s.state\";\n\t\t  let farmers = await u3.getTableRecords({\n\t\t\t \"json\": true,\n\t\t\t \"code\": contract,\n\t\t\t \"scope\": farmerscope,\n\t\t\t \"table\": farmerstable\n\t\t  });\n\t\t  console.log(farmers.rows)\n    },\n\n    async sell () {\n      console.log(\"sell\")\n      // TODO: 读取upc的值\n      // TODO: 发起harvest的交易\n      /*\n      config.keyProvider = \"5J9bWm2ThenDm3tjvmUgHtWCVMUdjRR1pxnRtnJjvKA4b2ut5WK\"; // alice\n      let creator = \"ben\";\n      const u3 = createU3(config);\n      let contract = await u3.contract(creator);\n      // TODO: 添加price\n      await contract.sell(this.upc, 1, {authorization: [`alice@active`]})\n      */\n\n      const u3 = createU3(config);\n      const contract = 'dremofly1'\n      const action = 'sell'\n      const params = [this.upc, this.price]\n      const result = await window.Cona.getCurrentNetworkChains()\n      if(result.success) {\n        const tx = await window.Cona.callContract({ contract, action, params, chainId: result.data[1]._id });\n        console.log(tx)\n      } else {\n        console.log(reuslt.msg)\n      }\n\n      // 查询状态\n      const farmerstable = \"state\";\n\t\t const farmerscope = \"s.state\";\n\t\t let farmers = await u3.getTableRecords({\n\t\t\t \"json\": true,\n\t\t\t \"code\": contract,\n\t\t\t \"scope\": farmerscope,\n\t\t\t \"table\": farmerstable\n\t\t });\n\t\t console.log(farmers.rows)\n    }\n\n  },\n  async mounted() {\n      window.addEventListener('load', function () {\n        if (typeof window.Cona !== 'undefined') {\n          console.log('Cona is enabled')\n        } else {\n          console.log('Cona is not installed')\n        }\n    })\n\n    const rs = await window.Cona.connectRequest()\n    console.log(\"rs: \", rs)\n    \n    const sign = await window.Cona.sign();\n    console.log(\"sign: \", sign)\n    },\n}\n</script>\n"],"sourceRoot":"src/components"}]}